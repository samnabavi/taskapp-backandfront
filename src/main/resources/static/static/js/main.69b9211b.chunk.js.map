{"version":3,"sources":["services/auth.service.js","components/LoginComponent.jsx","components/HomeComponent.jsx","components/ProfileComponent.jsx","services/auth-header.js","services/TaskService.js","components/ListTaskComponent.jsx","components/ViewTaskComponent.jsx","components/AddTaskComponent.jsx","components/EditTaskComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["API_URL","axios","get","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","Home","content","Profile","redirect","userReady","currentUser","getCurrentUser","to","align","id","authHeader","user","Authorization","TASKS_REST_API_URL","headers","taskId","task","put","delete","ListTaskComponent","tasks","addTask","editTask","deleteTask","TaskService","res","filter","getTasks","href","onClick","map","key","description","severity","marginLeft","viewTask","React","ViewTaskComponent","match","params","getTaskById","AddTaskComponent","saveTask","console","log","changeNameHandler","event","changeDescriptionHandler","changeEmailHandler","changeSeverityHandler","getTitle","placeholder","cancel","EditTaskComponent","App","logOut","showAdminBoard","undefined","roles","includes","logout","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.69b9211b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//const API_URL = \"http://localhost:8080/api/auth/\";\r\nconst API_URL = \"https://jwt-user-tasks.herokuapp.com/api/auth/\";\r\n\r\nclass AuthService {\r\n  getPublicContent() {\r\n        return axios.get(API_URL + 'all');\r\n      }\r\n    \r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.username, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>HOME PAGE</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { username: \"\" }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    if (!currentUser) this.setState({ redirect: \"/home\" });\r\n    this.setState({ currentUser: currentUser, userReady: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />\r\n    }\r\n\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div align=\"center\">\r\n        {(this.state.userReady) ?\r\n        <div>\r\n        <h2>Profile</h2>\r\n        <p>\r\n          <p>Token:</p> {currentUser.accessToken}\r\n        </p>\r\n        <p>\r\n          <p>Id:</p> {currentUser.id}\r\n        </p>\r\n      </div>: null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n    return  { Authorization: 'Bearer ' + user.accessToken };       \r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport authHeader from './auth-header';\r\n\r\n//const TASKS_REST_API_URL = 'http://localhost:8080/api/tasks';\r\nconst TASKS_REST_API_URL = 'https://jwt-user-tasks.herokuapp.com/api/tasks'\r\nclass TaskService {\r\n    getTasks() {\r\n        return axios.get(TASKS_REST_API_URL, { headers: authHeader() });\r\n    }\r\n\r\n    getTaskById(taskId) {\r\n        return axios.get(TASKS_REST_API_URL + '/' + taskId, { headers: authHeader() });\r\n    }\r\n\r\n    addTask(task) {\r\n        return axios.post(TASKS_REST_API_URL +'/', task, { headers: authHeader() });\r\n    }\r\n\r\n    editTask(task, taskId) {\r\n        return axios.put(TASKS_REST_API_URL + \"/\" + taskId, task, { headers: authHeader() });\r\n    }\r\n\r\n\r\n    deleteTask(taskId) {\r\n        return axios.delete(TASKS_REST_API_URL + \"/\" + taskId, { headers: authHeader() });\r\n    }\r\n\r\n}\r\n\r\nexport default new TaskService()","import React, { Component } from 'react';\r\nimport TaskService from '../services/TaskService';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nclass ListTaskComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tasks:[],\r\n            redirect: null,\r\n            currentUser: { username:\"\"}\r\n        }\r\n        this.addTask = this.addTask.bind(this);\r\n        this.editTask = this.editTask.bind(this);\r\n        this.deleteTask= this.deleteTask.bind(this);\r\n    }\r\n\r\n    deleteTask(id) {\r\n        TaskService.deleteTask(id).then( res => {\r\n            this.setState({tasks: this.state.tasks.filter(task => task.id !== id)});\r\n        });\r\n    }\r\n    viewTask(id) {\r\n        this.props.history.push(`/view-task/${id}`);\r\n    }\r\n    editTask(id) {\r\n        this.props.history.push(`/add-task/${id}`);\r\n    }\r\n    componentDidMount() {\r\n        TaskService.getTasks().then((res) => {\r\n            this.setState({tasks: res.data})\r\n        });\r\n        const currentUser = AuthService.getCurrentUser();\r\n\r\n    if (!currentUser) this.setState({ redirect: \"/home\" });\r\n    \r\n\r\n    }\r\n\r\n    addTask() {\r\n        this.props.history.push('/add-task/_add');\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={this.state.redirect} />\r\n          }\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-center\"> Tasks List</h1>\r\n                <div className = \"row\">\r\n                    \r\n                    <a target=\"_blank\" href=\"http://localhost:8080/home\">Logout</a>\r\n                    <a target=\"_blank\" href=\"https://springboot-sam.herokuapp.com\">Logout From Heroku</a>\r\n\r\n                 </div>\r\n                <div className = \"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addTask}> Add Task</button>\r\n                 </div>\r\n                 <br></br>\r\n                 <div className = \"row\">\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td> Task Id</td>\r\n                            <td> Task Name</td>\r\n                            <td> Task Description</td>\r\n                            <td> Task Email</td>\r\n                            <td> Task Severity</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.tasks.map(\r\n                                task =>\r\n                                <tr key={task.id}>\r\n                                    <td>{task.id}</td>\r\n                                    <td>{task.name}</td>\r\n                                    <td>{task.description}</td>\r\n                                    <td>{task.email}</td>\r\n                                    <td>{task.severity}</td>\r\n                                    <td>\r\n                                        <button onClick={ () => this.editTask(task.id)} className=\"btn btn-info\">Edit</button>\r\n                                        <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteTask(task.id)} className=\"btn btn-danger\">Delete</button>\r\n                                        <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewTask(task.id)} className=\"btn btn-info\">View</button>\r\n                                    </td>\r\n                                </tr>\r\n                                    \r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ListTaskComponent","import React, { Component } from 'react';\r\nimport TaskService from '../services/TaskService';\r\n\r\nclass ViewTaskComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            task: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        TaskService.getTaskById(this.state.id).then( res => {\r\n            this.setState({task: res.data});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <div className = \"card col-md-6 offset-md-3\">\r\n                    <h3 className = \"text-center\"> View Task Details</h3>\r\n                    <div className = \"card-body\">\r\n                        <div className = \"row\">\r\n                            <label> Task Name: </label>\r\n                            <div> { this.state.task.name }</div>\r\n                        </div>\r\n                        \r\n                        <div className = \"row\">\r\n                            <label> Task Description: </label>\r\n                            <div> { this.state.task.description }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Task Email: </label>\r\n                            <div> { this.state.task.email }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Task Severity: </label>\r\n                            <div> { this.state.task.severity }</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewTaskComponent\r\n","import React, { Component } from 'react';\r\nimport TaskService from '../services/TaskService';\r\n\r\nclass AddTaskComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            description: '',\r\n            email: '',\r\n            severity: ''\r\n        }\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeDescriptionHandler = this.changeDescriptionHandler.bind(this);\r\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\r\n        this.changeSeverityHandler = this.changeSeverityHandler.bind(this);\r\n        this.saveTask = this.saveTask.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.state.id === '_add') {\r\n            return \r\n        } else {\r\n            TaskService.getTaskById(this.state.id).then( (res) => {\r\n                let task = res.data;\r\n                this.setState({name: task.name,\r\n                    description: task.description,\r\n                    email: task.email,\r\n                    severity: task.severity\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    saveTask = (e) => {\r\n        e.preventDefault();\r\n        let task = {name: this.state.name, description: this.state.description, email: this.state.email, severity:this.state.severity};\r\n        console.log('task => ' + JSON.stringify(task));\r\n\r\n        if(this.state.id === '_add') {\r\n            TaskService.addTask(task).then( res => {\r\n                this.props.history.push('/tasks');\r\n            });\r\n        } else {\r\n            TaskService.editTask(task, this.state.id).then(res => {\r\n                this.props.history.push('/tasks');\r\n            });\r\n        }\r\n    }\r\n\r\n    changeNameHandler= (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    changeDescriptionHandler= (event) => {\r\n        this.setState({description: event.target.value});\r\n    }\r\n    changeEmailHandler= (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n    changeSeverityHandler= (event) => {\r\n        this.setState({severity: event.target.value});\r\n    }\r\n\r\n    cancel() {\r\n        this.props.history.push('/tasks');\r\n    }\r\n\r\n    getTitle() {\r\n        if(this.state.id === '_add') {\r\n            return <h3 className=\"text-center\">Add Task</h3> \r\n        } else {\r\n            return <h3 className=\"text-center\">Edit</h3>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                {\r\n                                    this.getTitle()\r\n                                }\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className = \"form-group\">\r\n                                            <label>Name: </label>\r\n                                            <input placeholder=\"Name\" name=\"name\" className=\"form-control\" \r\n                                                value={this.state.name} onChange={this.changeNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Description: </label>\r\n                                            <input placeholder=\"Description\" name=\"description\" className=\"form-control\" \r\n                                                value={this.state.description} onChange={this.changeDescriptionHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Email: </label>\r\n                                            <input placeholder=\"Email Address\" name=\"email\" className=\"form-control\" \r\n                                                value={this.state.email} onChange={this.changeEmailHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Severity: </label>\r\n                                            <input placeholder=\"Severity\" name=\"severity\" className=\"form-control\" \r\n                                                value={this.state.severity} onChange={this.changeSeverityHandler}/>\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-success\" onClick={this.saveTask}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTaskComponent\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport TaskService from '../services/TaskService';\r\n\r\nclass EditTaskComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            description: '',\r\n            email: '',\r\n            severity: ''\r\n        }\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeDescriptionHandler = this.changeDescriptionHandler.bind(this);\r\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\r\n        this.changeSeverityHandler = this.changeSeverityHandler.bind(this);\r\n        this.editTask = this.editTask.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    \r\n        TaskService.getTaskById(this.state.id).then( (res) => {\r\n            let task = res.data;\r\n            this.setState({name: task.name,\r\n                description: task.description,\r\n                email: task.email,\r\n                severity: task.severity\r\n            });\r\n        });\r\n    }\r\n    \r\n\r\n    editTask = (e) => {\r\n        e.preventDefault();\r\n        let task = {name: this.state.name, description: this.state.description, email: this.state.email, severity:this.state.severity};\r\n        console.log('task => ' + JSON.stringify(task));\r\n        console.log('id => ' + JSON.stringify(this.state.id));\r\n        TaskService.editTask(task, this.state.id).then(res => {\r\n            this.props.history.push('/tasks');\r\n        });\r\n    }\r\n\r\n    changeNameHandler= (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    changeDescriptionHandler= (event) => {\r\n        this.setState({description: event.target.value});\r\n    }\r\n    changeEmailHandler= (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n    changeSeverityHandler= (event) => {\r\n        this.setState({severity: event.target.value});\r\n    }\r\n\r\n    cancel() {\r\n        this.props.history.push('/tasks');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">Update Task</h3>\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className = \"form-group\">\r\n                                            <label>Name: </label>\r\n                                            <input placeholder=\"Name\" name=\"name\" className=\"form-control\" \r\n                                                value={this.state.name} onChange={this.changeNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Description: </label>\r\n                                            <input placeholder=\"Description\" name=\"description\" className=\"form-control\" \r\n                                                value={this.state.description} onChange={this.changeDescriptionHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Email: </label>\r\n                                            <input placeholder=\"Email Address\" name=\"email\" className=\"form-control\" \r\n                                                value={this.state.email} onChange={this.changeEmailHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Severity: </label>\r\n                                            <input placeholder=\"Severity\" name=\"severity\" className=\"form-control\" \r\n                                                value={this.state.severity} onChange={this.changeSeverityHandler}/>\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-success\" onClick={this.editTask}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditTaskComponent\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport 'react-app-polyfill/stable'\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/LoginComponent\";\r\nimport Home from \"./components/HomeComponent\";\r\nimport Profile from \"./components/ProfileComponent\";\r\n\r\n\r\n\r\nimport ListTaskComponent from './components/ListTaskComponent';\r\nimport ViewTaskComponent from './components/ViewTaskComponent';\r\nimport AddTaskComponent from './components/AddTaskComponent';\r\nimport EditTaskComponent from './components/EditTaskComponent';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      \r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        \r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser,  showAdminBoard } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div><Link to={\"/\"} > Home</Link></div>\r\n        <div>\r\n        {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <p> You are admin</p>\r\n              </li>\r\n            )}\r\n        {currentUser && (\r\n             \r\n               <Link to={\"/tasks\"} >\r\n                 Tasks\r\n               </Link>\r\n             \r\n              \r\n            )}\r\n\r\n          </div>\r\n        \r\n\r\n            <div>\r\n            {currentUser ? (\r\n              <div>\r\n              <a href=\"/login\"  onClick={this.logOut}>\r\n              LogOut\r\n            </a>\r\n            </div>\r\n            \r\n          ) : (\r\n            <div>\r\n               <Link to={\"/login\"}>\r\n                  Login\r\n                </Link>\r\n            \r\n             </div>     \r\n               \r\n           \r\n          )}\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n         \r\n\r\n          \r\n        \r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route path={[\"/\", \"/home\"]} component={Home} />\r\n            <Route path=\"/login\" component={Login} />\r\n           \r\n            <Route path=\"/profile\" component={Profile} />\r\n            \r\n            <Route path = \"/tasks\" component = {ListTaskComponent}></Route>\r\n            <Route path = \"/tasks/:id\" component = {EditTaskComponent}></Route>\r\n            <Route path = \"/add-task/:id\" component = {AddTaskComponent}></Route>\r\n            <Route path = \"/view-task/:id\" component = {ViewTaskComponent}></Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}